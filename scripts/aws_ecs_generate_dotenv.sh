#!/usr/bin/env bash

# Generate a dotenv file based on environment+secret configs defined in an ECS Task-Definition
# Assumes
# - awscli is installed
# - jq is installed

set -euo pipefail

# Lifted from: https://stackoverflow.com/a/918931
split_string(){
  IFS="$1" read -ra LIST <<< "$2"
  for i in "${LIST[@]}"; do
    echo "$i"
  done
}

# Get secret value by ARN, and extract JSON key if necessary.
get_secret_value(){
  arn_full=$1
  # inspired from: https://stackoverflow.com/a/41119233
  arn_parts_length=$(echo "$arn_full" | tr -cd ':' | wc -c | awk '$1=$1')

  case $arn_parts_length in
    6)
      aws secretsmanager get-secret-value --secret-id "$arn_full" --query SecretString --output text
      ;;
    9)
      arn=$(echo "$arn_full" | rev | cut -d':' -f4- | rev)
      key=$(echo "$arn_full" | rev | cut -d':' -f3 | rev)
      aws secretsmanager get-secret-value --secret-id "$arn" --query SecretString | jq -rM "fromjson | .$key"
      ;;
    *)
      echo 'Unsupported SecretManager secret ARN format! MUST be one of the following:'
      echo 'arn:aws:secretsmanager:{region}:{account_id}:secret:{secret_name}'
      echo 'arn:aws:secretsmanager:{region}:{account_id}:secret:{secret_name}:{json_key}::'
      return 1
      ;;
  esac
}
export -f get_secret_value

display_container_secret(){
  name=$(echo "$1" | cut -f1 -d,)
  secretArn=$(echo "$1" | cut -f2 -d,)
  echo "$name=$(get_secret_value "$secretArn")"
}
export -f display_container_secret

get_ecs_task_environment_vars(){
  if ! container_definition=$(aws ecs describe-task-definition --task-definition "$1" --query taskDefinition.containerDefinitions[0]); then
    echo "$container_definition"
    return 1
  fi
  echo "$container_definition" | jq -rM '.environment[]? | [.name,.value] | join("=")'
  echo "$container_definition" | jq -rM '.secrets[]? | [.name,.valueFrom] | join(",")' | xargs -L1 -I{} sh -c 'display_container_secret {}'
}

if [ "$#" -ne 1 ]; then
  echo "Invalid parameters!"
  echo "Usage: AWS_PROFILE=... $(basename "$0") <task_definition>"
  exit 1
fi

app_name=$1
dest_dir=~/.config/"$AWS_PROFILE"
dest_file="$dest_dir"/"$app_name".env
mkdir -p "$dest_dir"

out=$(get_ecs_task_environment_vars "$app_name") || (echo "$out"; exit 1)

echo "# Generated by $(basename "$0") -- avoid editing this manually." > "$dest_file"
echo "$out" | sort >> "$dest_file"
echo "Config saved to $dest_file"
